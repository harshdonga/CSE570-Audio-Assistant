import librosa
import numpy as np

NOISE_MAPPING = {
    0: ('class_0_1.wav', 'class_0_2.wav'),
    1: ('class_1_1.wav', 'class_1_2.wav'),
    2: ('class_2_1.wav', 'class_2_2.wav'),
    3: ('class_3_1.wav', 'class_3_2.wav'),
    4: ('class_4_1.wav', 'class_4_2.wav'),
    5: ('class_5_1.wav', 'class_5_2.wav'),
    6: ('class_6_1.wav', 'class_6_2.wav'),
    7: ('class_7_1.wav', 'class_7_2.wav'),
    8: ('class_8_1.wav', 'class_8_2.wav'),
    9: ('class_9_1.wav', 'class_9_2.wav'),
    10: ('class_10_1.wav', 'class_10_2.wav'),
    11: ('class_11_1.wav', 'class_11_2.wav'),
    12: ('class_12_1.wav', 'class_12_2.wav'),
    13: ('class_13_1.wav', 'class_13_2.wav'),
    14: ('class_14_1.wav', 'class_14_2.wav'),
    15: ('class_15_1.wav', 'class_15_2.wav'),
    16: ('class_16_1.wav', 'class_16_2.wav'),
    17: ('class_17_1.wav', 'class_17_2.wav'),
    18: ('class_18_1.wav', 'class_18_2.wav'),
    19: ('class_19_1.wav', 'class_19_2.wav'),
    20: ('class_20_1.wav', 'class_20_2.wav'),
    21: ('class_21_1.wav', 'class_21_2.wav'),
    22: ('class_22_1.wav', 'class_22_2.wav'),
    23: ('class_23_1.wav', 'class_23_2.wav'),
    24: ('class_24_1.wav', 'class_24_2.wav'),
    25: ('class_25_1.wav', 'class_25_2.wav'),
    26: ('class_26_1.wav', 'class_26_2.wav'),
    27: ('class_27_1.wav', 'class_27_2.wav'),
    28: ('class_28_1.wav', 'class_28_2.wav'),
    29: ('class_29_1.wav', 'class_29_2.wav'),
    30: ('class_30_1.wav', 'class_30_2.wav'),
    31: ('class_31_1.wav', 'class_31_2.wav'),
    32: ('class_32_1.wav', 'class_32_2.wav'),
    33: ('class_33_1.wav', 'class_33_2.wav'),
    34: ('class_34_1.wav', 'class_34_2.wav'),
    35: ('class_35_1.wav', 'class_35_2.wav'),
    36: ('class_36_1.wav', 'class_36_2.wav'),
    37: ('class_37_1.wav', 'class_37_2.wav'),
    38: ('class_38_1.wav', 'class_38_2.wav'),
    39: ('class_39_1.wav', 'class_39_2.wav'),
    40: ('class_40_1.wav', 'class_40_2.wav'),
    41: ('class_41_1.wav', 'class_41_2.wav'),
    42: ('class_42_1.wav', 'class_42_2.wav'),
    43: ('class_43_1.wav', 'class_43_2.wav'),
    44: ('class_44_1.wav', 'class_44_2.wav'),
    45: ('class_45_1.wav', 'class_45_2.wav'),
    46: ('class_46_1.wav', 'class_46_2.wav'),
    47: ('class_47_1.wav', 'class_47_2.wav'),
    48: ('class_48_1.wav', 'class_48_2.wav'),
    49: ('class_49_1.wav', 'class_49_2.wav'),
    50: ('class_50_1.wav', 'class_50_2.wav'),
    51: ('class_51_1.wav', 'class_51_2.wav'),
    52: ('class_52_1.wav', 'class_52_2.wav'),
    53: ('class_53_1.wav', 'class_53_2.wav'),
    54: ('class_54_1.wav', 'class_54_2.wav'),
    55: ('class_55_1.wav', 'class_55_2.wav'),
    56: ('class_56_1.wav', 'class_56_2.wav'),
    57: ('class_57_1.wav', 'class_57_2.wav'),
    58: ('class_58_1.wav', 'class_58_2.wav'),
    59: ('class_59_1.wav', 'class_59_2.wav'),
    60: ('class_60_1.wav', 'class_60_2.wav'),
    61: ('class_61_1.wav', 'class_61_2.wav'),
    62: ('class_62_1.wav', 'class_62_2.wav'),
    63: ('class_63_1.wav', 'class_63_2.wav'),
    64: ('class_64_1.wav', 'class_64_2.wav'),
    65: ('class_65_1.wav', 'class_65_2.wav'),
    66: ('class_66_1.wav', 'class_66_2.wav'),
    67: ('class_67_1.wav', 'class_67_2.wav'),
    68: ('class_68_1.wav', 'class_68_2.wav'),
    69: ('class_69_1.wav', 'class_69_2.wav'),
    70: ('class_70_1.wav', 'class_70_2.wav'),
    71: ('class_71_1.wav', 'class_71_2.wav'),
    72: ('class_72_1.wav', 'class_72_2.wav'),
    73: ('class_73_1.wav', 'class_73_2.wav'),
    74: ('class_74_1.wav', 'class_74_2.wav'),
    75: ('class_75_1.wav', 'class_75_2.wav'),
    76: ('class_76_1.wav', 'class_76_2.wav'),
    77: ('class_77_1.wav', 'class_77_2.wav'),
    78: ('class_78_1.wav', 'class_78_2.wav'),
    79: ('class_79_1.wav', 'class_79_2.wav'),
    80: ('class_80_1.wav', 'class_80_2.wav'),
    81: ('class_81_1.wav', 'class_81_2.wav'),
    82: ('class_82_1.wav', 'class_82_2.wav'),
    83: ('class_83_1.wav', 'class_83_2.wav'),
    84: ('class_84_1.wav', 'class_84_2.wav'),
    85: ('class_85_1.wav', 'class_85_2.wav'),
    86: ('class_86_1.wav', 'class_86_2.wav'),
    87: ('class_87_1.wav', 'class_87_2.wav'),
    88: ('class_88_1.wav', 'class_88_2.wav'),
    89: ('class_89_1.wav', 'class_89_2.wav'),
    90: ('class_90_1.wav', 'class_90_2.wav'),
    91: ('class_91_1.wav', 'class_91_2.wav'),
    92: ('class_92_1.wav', 'class_92_2.wav'),
    93: ('class_93_1.wav', 'class_93_2.wav'),
    94: ('class_94_1.wav', 'class_94_2.wav'),
    95: ('class_95_1.wav', 'class_95_2.wav'),
    96: ('class_96_1.wav', 'class_96_2.wav'),
    97: ('class_97_1.wav', 'class_97_2.wav'),
    98: ('class_98_1.wav', 'class_98_2.wav'),
    99: ('class_99_1.wav', 'class_99_2.wav'),
    100: ('class_100_1.wav', 'class_100_2.wav'),
    101: ('class_101_1.wav', 'class_101_2.wav'),
    102: ('class_102_1.wav', 'class_102_2.wav'),
    103: ('class_103_1.wav', 'class_103_2.wav'),
    104: ('class_104_1.wav', 'class_104_2.wav'),
    105: ('class_105_1.wav', 'class_105_2.wav'),
    106: ('class_106_1.wav', 'class_106_2.wav'),
    107: ('class_107_1.wav', 'class_107_2.wav'),
    108: ('class_108_1.wav', 'class_108_2.wav'),
    109: ('class_109_1.wav', 'class_109_2.wav'),
    110: ('class_110_1.wav', 'class_110_2.wav'),
    111: ('class_111_1.wav', 'class_111_2.wav'),
    112: ('class_112_1.wav', 'class_112_2.wav'),
    113: ('class_113_1.wav', 'class_113_2.wav'),
    114: ('class_114_1.wav', 'class_114_2.wav'),
    115: ('class_115_1.wav', 'class_115_2.wav'),
    116: ('class_116_1.wav', 'class_116_2.wav'),
    117: ('class_117_1.wav', 'class_117_2.wav'),
    118: ('class_118_1.wav', 'class_118_2.wav'),
    119: ('class_119_1.wav', 'class_119_2.wav'),
    120: ('class_120_1.wav', 'class_120_2.wav'),
    121: ('class_121_1.wav', 'class_121_2.wav'),
    122: ('class_122_1.wav', 'class_122_2.wav'),
    123: ('class_123_1.wav', 'class_123_2.wav'),
    124: ('class_124_1.wav', 'class_124_2.wav'),
    125: ('class_125_1.wav', 'class_125_2.wav'),
    126: ('class_126_1.wav', 'class_126_2.wav'),
    127: ('class_127_1.wav', 'class_127_2.wav'),
    128: ('class_128_1.wav', 'class_128_2.wav'),
    129: ('class_129_1.wav', 'class_129_2.wav'),
    130: ('class_130_1.wav', 'class_130_2.wav'),
    131: ('class_131_1.wav', 'class_131_2.wav'),
    132: ('class_132_1.wav', 'class_132_2.wav'),
    133: ('class_133_1.wav', 'class_133_2.wav'),
    134: ('class_134_1.wav', 'class_134_2.wav'),
    135: ('class_135_1.wav', 'class_135_2.wav'),
    136: ('class_136_1.wav', 'class_136_2.wav'),
    137: ('class_137_1.wav', 'class_137_2.wav'),
    138: ('class_138_1.wav', 'class_138_2.wav'),
    139: ('class_139_1.wav', 'class_139_2.wav'),
    140: ('class_140_1.wav', 'class_140_2.wav'),
    141: ('class_141_1.wav', 'class_141_2.wav'),
    142: ('class_142_1.wav', 'class_142_2.wav'),
    143: ('class_143_1.wav', 'class_143_2.wav'),
    144: ('class_144_1.wav', 'class_144_2.wav'),
    145: ('class_145_1.wav', 'class_145_2.wav'),
    146: ('class_146_1.wav', 'class_146_2.wav'),
    147: ('class_147_1.wav', 'class_147_2.wav'),
    148: ('class_148_1.wav', 'class_148_2.wav'),
    149: ('class_149_1.wav', 'class_149_2.wav'),
    150: ('class_150_1.wav', 'class_150_2.wav'),
    151: ('class_151_1.wav', 'class_151_2.wav'),
    152: ('class_152_1.wav', 'class_152_2.wav'),
    153: ('class_153_1.wav', 'class_153_2.wav'),
    154: ('class_154_1.wav', 'class_154_2.wav'),
    155: ('class_155_1.wav', 'class_155_2.wav'),
    156: ('class_156_1.wav', 'class_156_2.wav'),
    157: ('class_157_1.wav', 'class_157_2.wav'),
    158: ('class_158_1.wav', 'class_158_2.wav'),
    159: ('class_159_1.wav', 'class_159_2.wav'),
    160: ('class_160_1.wav', 'class_160_2.wav'),
    161: ('class_161_1.wav', 'class_161_2.wav'),
    162: ('class_162_1.wav', 'class_162_2.wav'),
    163: ('class_163_1.wav', 'class_163_2.wav'),
    164: ('class_164_1.wav', 'class_164_2.wav'),
    165: ('class_165_1.wav', 'class_165_2.wav'),
    166: ('class_166_1.wav', 'class_166_2.wav'),
    167: ('class_167_1.wav', 'class_167_2.wav'),
    168: ('class_168_1.wav', 'class_168_2.wav'),
    169: ('class_169_1.wav', 'class_169_2.wav'),
    170: ('class_170_1.wav', 'class_170_2.wav'),
    171: ('class_171_1.wav', 'class_171_2.wav'),
    172: ('class_172_1.wav', 'class_172_2.wav'),
    173: ('class_173_1.wav', 'class_173_2.wav'),
    174: ('class_174_1.wav', 'class_174_2.wav'),
    175: ('class_175_1.wav', 'class_175_2.wav'),
    176: ('class_176_1.wav', 'class_176_2.wav'),
    177: ('class_177_1.wav', 'class_177_2.wav'),
    178: ('class_178_1.wav', 'class_178_2.wav'),
    179: ('class_179_1.wav', 'class_179_2.wav'),
    180: ('class_180_1.wav', 'class_180_2.wav'),
    181: ('class_181_1.wav', 'class_181_2.wav'),
    182: ('class_182_1.wav', 'class_182_2.wav'),
    183: ('class_183_1.wav', 'class_183_2.wav'),
    184: ('class_184_1.wav', 'class_184_2.wav'),
    185: ('class_185_1.wav', 'class_185_2.wav'),
    186: ('class_186_1.wav', 'class_186_2.wav'),
    187: ('class_187_1.wav', 'class_187_2.wav'),
    188: ('class_188_1.wav', 'class_188_2.wav'),
    189: ('class_189_1.wav', 'class_189_2.wav'),
    190: ('class_190_1.wav', 'class_190_2.wav'),
    191: ('class_191_1.wav', 'class_191_2.wav'),
    192: ('class_192_1.wav', 'class_192_2.wav'),
    193: ('class_193_1.wav', 'class_193_2.wav'),
    194: ('class_194_1.wav', 'class_194_2.wav'),
    195: ('class_195_1.wav', 'class_195_2.wav'),
    196: ('class_196_1.wav', 'class_196_2.wav'),
    197: ('class_197_1.wav', 'class_197_2.wav'),
    198: ('class_198_1.wav', 'class_198_2.wav'),
    199: ('class_199_1.wav', 'class_199_2.wav'),
}

LABEL_DICT = {
    0: 'Accelerating and revving and vroom',
    1: 'Accordion',
    2: 'Acoustic guitar',
    3: 'Applause',
    4: 'Bark',
    5: 'Bass drum',
    6: 'Bass guitar',
    7: 'Bathtub (filling or washing)',
    8: 'Bicycle',
    9: 'Burping and eructation',
    10: 'Bus',
    11: 'Camera',
    12: 'Car',
    13: 'Car alarm',
    14: 'Car passing by',
    15: 'Cat',
    16: 'Cough',
    17: 'Chatter',
    18: 'Cheering',
    19: 'Chicken and rooster',
    20: 'Child speech and kid speaking',
    21: 'Chink and clink',
    22: 'Chirp and tweet',
    23: 'Choir',
    24: 'Clapping',
    25: 'Clock',
    26: 'Coins',
    27: 'Computer keyboard',
    28: 'Crack',
    29: 'Crackle',
    30: 'Creak',
    31: 'Crowd',
    32: 'Cupboard open or close',
    33: 'Cutlery and silverware',
    34: 'Dishes and pots and pans',
    35: 'Door',
    36: 'Drawer open or close',
    37: 'Drip',
    38: 'Electric guitar',
    39: 'Fart',
    40: 'Finger snapping',
    41: 'Fire',
    42: 'Fire alarm',
    43: 'Fireworks',
    44: 'Fixed-wing aircraft and airplane',
    45: 'Flute',
    46: 'Fly and mosquito',
    47: 'Flush',
    48: 'Gasp',
    49: 'Glockenspiel',
    50: 'Gong',
    51: 'Gunshot and gunfire',
    52: 'Hair dryer',
    53: 'Hammer',
    54: 'Harmonica',
    55: 'Hi-hat',
    56: 'Hiss',
    57: 'Honk',
    58: 'Howl',
    59: 'Keys jangling',
    60: 'Knock',
    61: 'Laughter',
    62: 'Meow',
    63: 'Microwave oven',
    64: 'Motorcycle',
    65: 'Printer',
    66: 'Purr',
    67: 'Raindrop',
    68: 'Rattle',
    69: 'Reverse beeper',
    70: 'Rustling',
    71: 'Scissors',
    72: 'Screech',
    73: 'Shatter',
    74: 'Shout',
    75: 'Shuffle',
    76: 'Sigh',
    77: 'Sink (filling or washing)',
    78: 'Siren',
    79: 'Skateboard',
    80: 'Slam',
    81: 'Sneeze',
    82: 'Sniff',
    83: 'Snoring',
    84: 'Speech',
    85: 'Squeak',
    86: 'Stream',
    87: 'Strum',
    88: 'Subway and metro and underground',
    89: 'Swish',
    90: 'Tap',
    91: 'Telephone',
    92: 'Thump and thud',
    93: 'Tick',
    94: 'Tick-tock',
    95: 'Toilet flush',
    96: 'Traffic noise and roadway noise',
    97: 'Trickle and dribble',
    98: 'Truck',
    99: 'Trumpet',
    100: 'Typing',
    101: 'Walk and footsteps',
    102: 'Water tap and faucet',
    103: 'Whistle',
    104: 'Wind',
    105: 'Writing',
    106: 'Zipper (clothing)',
    107: 'Acoustic drum kit',
    108: 'Air horn',
    109: 'Alto saxophone',
    110: 'Bamboo flute',
    111: 'Banjo',
    112: 'Bell',
    113: 'Blender',
    114: 'Boom',
    115: 'Bouncing',
    116: 'Bowling',
    117: 'Brass instrument',
    118: 'Breaking',
    119: 'Breathing',
    120: 'Bubble',
    121: 'Cartridge',
    122: 'Chain',
    123: 'Chime',
    124: 'Church bell',
    125: 'Clarinet',
    126: 'Click',
    127: 'Clickety-clack',
    128: 'Crinkling',
    129: 'Crumpling',
    130: 'Drum machine',
    131: 'Duck',
    132: 'Engine starting',
    133: 'Explosion',
    134: 'Frog',
    135: 'Gurgling',
    136: 'Heartbeat',
    137: 'Horse',
    138: 'Humming',
    139: 'Ice cracking',
    140: 'Jet engine',
    141: 'Lawn mower',
    142: 'Machine gun',
    143: 'Marimba',
    144: 'Mechanical fan',
    145: 'Modem',
    146: 'Ocean wave',
    147: 'Oink',
    148: 'Organ',
    149: 'Pager',
    150: 'Pig',
    151: 'Ping',
    152: 'Pipe',
    153: 'Plopping',
    154: 'Rain',
    155: 'Record scratching',
    156: 'Reversing alarm',
    157: 'Ringing tone',
    158: 'Roaring',
    159: 'Rock and roll',
    160: 'Rolling',
    161: 'Rubber',
    162: 'Sawing',
    163: 'Scary sound',
    164: 'Scraping',
    165: 'Slurping',
    166: 'Splash',
    167: 'Squawk',
    168: 'Squealing',
    169: 'Static',
    170: 'Swoosh',
    171: 'Talking',
    172: 'Thunderstorm',
    173: 'Tinkle',
    174: 'Train',
    175: 'Trombone',
    176: 'Tuba',
    177: 'Vacuum cleaner',
    178: 'Velcro',
    179: 'Vibrating phone',
    180: 'Washing machine',
    181: 'Water dripping',
    182: 'Water splashing',
    183: 'Waterfall',
    184: 'Whoosh',
    185: 'Wind chime',
    186: 'Windscreen wipers',
    187: 'Woodpecker',
    188: 'Yawn',
    189: 'Yell',
    190: 'Zip',
    191: 'Accordion bellows',
    192: 'Air conditioner',
    193: 'Bagpipes',
    194: 'Brushing teeth',
    195: 'Doorbell',
    196: 'Flushing',
    197: 'Hovercraft',
    198: 'Metallic clang',
    199: 'Swallow'
}

def extract_features(file_path, n_mfcc=40, n_mels=40, n_chroma=40):
    try:
        y, sr = librosa.load(file_path)

        n_fft = min(2048, len(y))
        hop_length = n_fft // 4

        # STFT
        D = librosa.stft(y, n_fft=n_fft, hop_length=hop_length)
        S = np.abs(D)**2

        # Extract features using the pre-computed STFT
        mel_basis = librosa.filters.mel(sr=sr, n_fft=n_fft, n_mels=n_mels)
        mel_S = np.dot(mel_basis, S)

        mfccs = np.mean(librosa.feature.mfcc(S=librosa.power_to_db(mel_S),
                                            n_mfcc=n_mfcc).T, axis=0)
        melspectrogram = np.mean(librosa.power_to_db(mel_S).T, axis=0)

        # Chromagram from STFT
        chroma_stft = np.mean(librosa.feature.chroma_stft(S=S, sr=sr,
                                                         n_chroma=n_chroma,
                                                         hop_length=hop_length).T, axis=0)

        bins_per_octave = n_chroma * 3
        chroma_cq = np.mean(librosa.feature.chroma_cqt(y=y, sr=sr,
                                                      n_chroma=n_chroma,
                                                      bins_per_octave=bins_per_octave,
                                                      hop_length=hop_length).T, axis=0)

        chroma_cens = np.mean(librosa.feature.chroma_cens(y=y, sr=sr,
                                                         n_chroma=n_chroma,
                                                         bins_per_octave=bins_per_octave,
                                                         hop_length=hop_length).T, axis=0)

        # Stack and reshape features
        features = np.reshape(np.vstack((mfccs, melspectrogram, chroma_stft,
                                       chroma_cq, chroma_cens)), (40, 5))

        return features

    except Exception as e:
        print(f"Error processing {file_path}: {str(e)}")
        return None